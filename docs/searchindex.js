Search.setIndex({"docnames": ["actFunc", "batchGenFunc", "costFunc", "cvffnn", "cvrbfnn", "decayFunc", "deepptrbfnn", "example_deepptrbf", "fcrbfnn", "gpu", "index", "initFunc", "moduless", "regFunc", "rosenpymodule", "rplayer", "rpnn", "rputils", "scffnn", "welcome"], "filenames": ["actFunc.rst", "batchGenFunc.rst", "costFunc.rst", "cvffnn.rst", "cvrbfnn.rst", "decayFunc.rst", "deepptrbfnn.rst", "example_deepptrbf.rst", "fcrbfnn.rst", "gpu.rst", "index.rst", "initFunc.rst", "moduless.rst", "regFunc.rst", "rosenpymodules.rst", "rplayer.rst", "rpnn.rst", "rputils.rst", "scffnn.rst", "welcome.rst"], "titles": ["actFunc modules", "batchGenFunc modules", "costFunc modules", "cvffnn modules", "cvrbfnn modules", "decayFunc modules", "deepptrbfnn modules", "Code Example", "fcrbfnn modules", "gpu modules", "Welcome to RosenPy\u2019s documentation!", "initFunc modules", "RosenPy Package", "regFunc modules", "RosenPymodules Package", "rplayer modules", "rpnn modules", "RpUtils Package", "scffnn modules", "Welcome to RosenPy\u2019s documentation!"], "terms": {"rosenpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 18], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 18], "open": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "sourc": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "python": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 18, 19], "framework": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 18, 19], "complex": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 18, 19], "valu": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 18, 19], "neural": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19], "network": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19], "copyright": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "A": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 18, 19], "cruz": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "k": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "mayer": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "d": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "arant": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "licens": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "thi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "file": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 18], "part": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "distribut": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "under": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "term": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "gnu": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "gener": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "public": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "publish": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "free": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "softwar": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "foundat": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "either": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "version": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 18], "your": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "option": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "ani": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "later": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "For": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "addit": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 18, 19], "inform": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "pleas": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "readm": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "md": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "hope": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 18, 19], "everi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "user": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 18, 19], "without": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "warranti": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "even": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "impli": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "merchant": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "fit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18], "FOR": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "particular": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "purpos": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "see": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "more": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "detail": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "you": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "should": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "have": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "receiv": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "copi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "along": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "If": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "http": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "www": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "org": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "aco": [0, 3, 6, 12, 17, 18], "x": [0, 1, 3, 4, 6, 8, 16, 18], "deriv": [0, 3, 4, 6, 8, 18], "fals": 0, "activ": [0, 3, 6, 15, 18], "function": [0, 3, 4, 5, 6, 8, 9, 10, 15, 16, 18, 19], "arc": 0, "cosin": 0, "element": [0, 11], "wise": 0, "paramet": [0, 1, 2, 3, 4, 5, 6, 8, 11, 13, 15, 16, 18], "array_lik": 0, "input": [0, 1, 3, 4, 6, 7, 8, 16, 18], "arrai": [0, 1, 2, 3, 4, 6, 7, 8, 11, 16, 18], "bool": 0, "The": [0, 1, 2, 3, 4, 5, 6, 8, 11, 13, 16, 18], "default": [0, 1, 3, 4, 5, 6, 8, 18], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 18], "It": [0, 3, 4, 6, 8, 9, 10, 16, 18, 19], "defin": [0, 3, 4, 6, 8, 16, 18], "whether": 0, "what": 0, "feedforward": [0, 3, 4, 6, 8, 10, 12, 14, 18, 19], "its": [0, 15], "backpropag": [0, 3, 4, 6, 8, 18], "type": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 18], "asin": [0, 3, 6, 12, 17, 18], "sine": 0, "asinh": [0, 3, 6, 12, 17, 18], "invers": 0, "hyperbol": 0, "atan": [0, 3, 6, 12, 17, 18], "tangent": 0, "atanh": [0, 3, 6, 12, 17, 18], "linear": [0, 12, 17], "also": 0, "known": 0, "ident": 0, "multipli": 0, "x1": 0, "0": [0, 3, 4, 6, 7, 8, 15, 16, 18], "sech": [0, 3, 6, 12, 17, 18], "secant": 0, "fcrbfnn": [0, 12, 14], "sin": [0, 3, 6, 12, 17, 18], "sinh": [0, 3, 6, 12, 17, 18], "splitcomplex": [0, 12, 17], "y": [0, 1, 2, 3, 4, 6, 8, 16, 18], "act": 0, "scffnn": [0, 12, 14], "sinc": 0, "he": 0, "ar": [0, 1, 3, 4, 6, 8, 16, 18], "separ": 0, "appli": [0, 5], "real": [0, 1, 3, 4, 6, 8, 11, 16, 18], "imaginari": 0, "compon": 0, "combin": 0, "each": [0, 15], "layer": [0, 3, 4, 6, 7, 8, 12, 14, 15, 18], "str": [0, 3, 4, 6, 8, 16, 18], "name": 0, "class": [0, 3, 4, 6, 8, 15, 16, 18], "string": [0, 3, 4, 6, 8, 18], "tan": [0, 3, 6, 12, 17, 18], "tanh": [0, 3, 6, 12, 15, 17, 18], "batch_sequenti": [1, 3, 4, 6, 8, 12, 16, 17, 18], "batch_siz": [1, 3, 4, 6, 7, 8, 16, 18], "1": [1, 3, 4, 5, 6, 7, 8, 15, 16, 18], "sequenti": [1, 3, 4, 6, 8, 16, 18], "batch": [1, 3, 4, 6, 8, 10, 16, 18, 19], "data": [1, 3, 4, 6, 7, 8, 16, 18], "train": [1, 3, 4, 5, 6, 7, 8, 10, 13, 16, 18, 19], "like": [1, 2, 3, 4, 6, 8, 11, 16, 18], "shape": [1, 3, 4, 6, 7, 8, 16, 18], "n_sampl": [1, 3, 4, 6, 8, 16, 18], "n_input": [1, 3, 4, 6, 8, 16, 18], "vector": [1, 3, 4, 6, 8, 16, 18], "number": [1, 3, 4, 5, 6, 8, 11, 16, 18], "where": [1, 3, 4, 6, 8, 16, 18], "sampl": [1, 3, 4, 6, 8, 11, 16, 18], "featur": [1, 3, 4, 6, 8, 16, 18], "n_output": [1, 3, 4, 6, 8, 16, 18], "target": [1, 2, 3, 4, 6, 8, 16, 18], "repres": [1, 3, 4, 6, 8, 16, 18], "desir": [1, 3, 4, 6, 8, 16, 18], "output": [1, 3, 4, 6, 7, 8, 16, 18], "int": [1, 3, 4, 5, 6, 8, 11, 13, 16, 18], "size": [1, 11], "equal": 1, "algorithm": 1, "sgd": 1, "tensor": 1, "yield": 1, "n_batch": [1, 3, 4, 6, 8, 18], "batch_shuffl": [1, 3, 4, 6, 8, 12, 16, 17, 18], "shuffl": [1, 3, 4, 6, 8, 16, 18], "mse": [2, 3, 4, 6, 8, 12, 16, 17, 18], "y_pred": [2, 3, 4, 6, 7, 8, 18], "calcul": [2, 3, 4, 6, 7, 8, 13, 16, 18], "mean": [2, 3, 4, 6, 8, 16, 18], "squar": 2, "error": 2, "between": 2, "predict": [2, 3, 4, 6, 7, 8, 10, 12, 14, 16, 18, 19], "float": [2, 3, 4, 5, 6, 8, 13, 18], "cost_func": [3, 4, 6, 8, 16, 18], "learning_r": [3, 4, 5, 6, 7, 8, 16, 18], "001": [3, 4, 6, 8, 16, 18], "lr_decay_method": [3, 4, 6, 8, 16, 18], "none_decai": [3, 4, 5, 6, 8, 12, 16, 17, 18], "lr_decay_r": [3, 4, 6, 8, 16, 18], "lr_decay_step": [3, 4, 6, 8, 16, 18], "momentum": [3, 4, 6, 8, 10, 16, 18, 19], "patienc": [3, 4, 6, 8, 16, 18], "10000000000000": [3, 4, 6, 8, 16, 18], "xp": [3, 4, 6, 8, 16, 18], "none": [3, 4, 6, 8, 16, 18], "base": [3, 4, 5, 6, 8, 13, 15, 16, 18], "neuralnetwork": [3, 4, 6, 8, 12, 14, 16, 18], "specif": [3, 4, 6, 8, 15, 18], "pass": [3, 4, 6, 8, 15, 18], "model": [3, 4, 6, 8, 10, 16, 18, 19], "construct": [3, 4, 6, 8, 15, 18], "includ": [3, 4, 6, 8, 15, 18], "ad": [3, 4, 6, 8, 18], "method": [3, 4, 6, 8, 11, 16, 18], "from": [3, 4, 6, 7, 8, 11, 16, 18], "addlay": [3, 4, 6, 7, 8, 12, 14, 16, 18], "neuron": [3, 4, 6, 7, 8, 15, 18], "ishap": [3, 4, 6, 7, 8, 15, 18], "weights_initi": [3, 4, 6, 8, 15, 18], "random_norm": [3, 4, 6, 8, 11, 12, 15, 17, 18], "bias_initi": [3, 4, 6, 8, 15, 18], "reg_strength": [3, 4, 6, 8, 13, 15, 18], "lambda_init": [3, 4, 6, 8, 13, 15, 18], "respons": [3, 4, 6, 8, 18], "hidden": [3, 4, 6, 8, 18], "differ": [3, 6, 10, 18, 19], "zero": [3, 6, 11, 12, 17, 18], "first": [3, 4, 6, 8, 18], "wai": [3, 4, 6, 8, 18], "set": [3, 4, 6, 8, 11, 18], "initi": [3, 4, 5, 6, 8, 11, 13, 18], "random": [3, 4, 6, 7, 8, 11, 18], "weight": [3, 4, 6, 8, 18], "initfunc": [3, 4, 6, 8, 12, 17, 18], "bias": [3, 4, 6, 8, 18], "were": [3, 6, 18], "rp_util": [3, 4, 6, 8, 16, 18], "ones": [3, 4, 6, 8, 11, 12, 15, 17, 18], "ones_r": [3, 4, 6, 8, 11, 12, 17, 18], "random_uniform": [3, 6, 11, 12, 17, 18], "glorot_norm": [3, 6, 11, 12, 17, 18], "glorot_uniform": [3, 6, 11, 12, 17, 18], "rbf_default": [3, 4, 6, 8, 11, 12, 15, 17, 18], "select": [3, 6, 18], "which": [3, 4, 5, 6, 8, 16, 18], "actfunc": [3, 6, 12, 17, 18], "regular": [3, 4, 6, 8, 10, 13, 18, 19], "strength": [3, 4, 6, 8, 18], "turn": [3, 4, 6, 8, 18], "off": [3, 4, 6, 8, 18], "factor": [3, 4, 6, 8, 13, 18], "backprop": [3, 4, 6, 8, 12, 14, 18], "epoch": [3, 4, 5, 6, 7, 8, 13, 16, 18], "provid": [3, 4, 6, 8, 16, 18], "gradient": [3, 4, 6, 8, 18], "current": [3, 4, 5, 6, 8, 13, 18], "updat": [3, 4, 6, 8, 16, 18], "smooth": [3, 4, 6, 8, 18], "last": [3, 4, 6, 8, 18], "x_train": [3, 4, 6, 8, 16, 18], "y_train": [3, 4, 6, 8, 16, 18], "x_val": [3, 4, 6, 8, 16, 18], "y_val": [3, 4, 6, 8, 16, 18], "100": [3, 4, 6, 7, 8, 16, 18], "verbos": [3, 4, 6, 7, 8, 16, 18], "10": [3, 4, 6, 8, 16, 18], "batch_gen": [3, 4, 6, 8, 16, 18], "given": [3, 4, 6, 8, 13, 16, 18], "valid": [3, 4, 6, 8, 16, 18], "all": [3, 4, 6, 8, 11, 16, 18], "one": [3, 4, 6, 8, 10, 11, 16, 18, 19], "cycl": [3, 4, 6, 8, 16, 18], "divis": [3, 4, 6, 8, 16, 18], "loss": [3, 4, 6, 8, 16, 18], "histori": [3, 4, 6, 8, 16, 18], "can": [3, 4, 6, 8, 10, 16, 18, 19], "batchgenfunc": [3, 4, 6, 8, 12, 16, 17, 18], "work": [3, 4, 6, 8, 16, 18], "through": [3, 4, 6, 8, 16, 18], "befor": [3, 4, 6, 8, 16, 18], "intern": [3, 4, 6, 8, 16, 18], "dict": [3, 4, 6, 8, 16, 18], "exampl": [3, 4, 6, 8, 10, 16, 18], "200": [3, 4, 6, 8, 16, 18], "41058633": [3, 4, 6, 8, 16, 18], "00749860": [3, 4, 6, 8, 16, 18], "00473513": [3, 4, 6, 8, 16, 18], "loss_val": [3, 4, 6, 8, 16, 18], "gethistori": [3, 4, 6, 8, 12, 14, 16, 18], "specifi": [3, 4, 6, 8, 16, 18], "radial": [4, 6, 8, 10, 19], "basi": [4, 6, 8, 10, 19], "oshap": [4, 6, 7, 8, 15], "sigma_initi": [4, 6, 8, 15], "gamma_initi": [4, 6, 8, 15], "gamma_r": [4, 6, 7, 8, 15], "01": [4, 6, 7, 8], "sigma_r": [4, 6, 7, 8, 15], "argument": [4, 8], "rbf": [4, 8], "sigma": [4, 6, 8], "gamma": [4, 6, 8], "learn": [4, 5, 6, 8, 10, 19], "rate": [4, 5, 6, 8, 10, 19], "matrix": [4, 6, 8, 11], "center": [4, 6, 8], "varianc": [4, 6, 8], "exponential_decai": [5, 12, 17], "decay_r": 5, "decay_step": 5, "exponenti": 5, "decai": [5, 10, 19], "process": [5, 13], "control": 5, "speed": 5, "step": 5, "origin": 5, "staircas": [5, 12, 17], "formula": 5, "time_based_decai": [5, 12, 17], "time": 5, "deep": [6, 7, 10, 19], "phase": [6, 10, 19], "transmitt": [6, 8, 10, 19], "example_deepptrbf": 7, "py": 7, "import": 7, "ptrbf": 7, "modul": [7, 10, 12, 14, 17], "rosenpymodel": 7, "deepptrbfnn": [7, 12, 14], "mynn": 7, "rputil": [7, 10, 12], "util": 7, "numpi": [7, 9, 10, 19], "np": 7, "def": 7, "setdata": 7, "trainsetin": 7, "trainsetout": 7, "randint": 7, "2": 7, "1204": 7, "7": 7, "1j": 7, "a1": 7, "a2": 7, "while": 7, "a0": 7, "aux": 7, "34": 7, "27": 7, "87": 7, "43": 7, "21": 7, "append": 7, "05": 7, "sqrt": 7, "randn": 7, "t": 7, "1002": 7, "main": 7, "prepar": 7, "input_data": 7, "output_data": 7, "creat": 7, "instanc": 7, "nn": 7, "1e": 7, "add": 7, "4": 7, "5": 7, "6": [7, 10, 19], "1000": 7, "make": 7, "print": 7, "accuraci": 7, "2f": 7, "format": 7, "fulli": [8, 10, 19], "get_modul": [9, 12, 17], "implement": [9, 10, 19], "cpu": 9, "code": [9, 10], "cupi": 9, "otherwis": 9, "librari": [10, 19], "written": [10, 19], "incorpor": [10, 19], "cvnn": [10, 15, 19], "cv": [10, 19], "ffnn": [10, 19], "sc": [10, 19], "split": [10, 18, 19], "rbfnn": [10, 19], "com": [10, 19], "plex": [10, 19], "fc": [10, 19], "pt": [10, 19], "enabl": [10, 19], "properti": [10, 19], "intrins": [10, 19], "l2": [10, 13, 19], "earli": [10, 19], "stop": [10, 19], "mini": [10, 19], "python3": [10, 19], "easi": [10, 19], "ha": [10, 19], "fast": [10, 19], "curv": [10, 19], "end": [10, 19], "most": [10, 19], "popular": [10, 19], "program": [10, 19], "languag": [10, 19], "avail": [10, 19], "todai": [10, 19], "addition": [10, 19], "sever": [10, 19], "aid": [10, 19], "optim": [10, 19], "problem": [10, 19], "In": [10, 19], "api": [10, 19], "consist": [10, 19], "straightforward": [10, 19], "extens": [10, 19], "simpl": [10, 19], "structur": [10, 19], "support": [10, 19], "five": [10, 19], "easili": [10, 19], "configur": [10, 15, 19], "hyperparamet": [10, 19], "packag": 10, "rosenpymodul": [10, 12], "index": 10, "search": 10, "page": 10, "row": 11, "col": 11, "glorot": 11, "normal": 11, "column": 11, "uniform": 11, "binari": 11, "rpnn": [12, 14], "rplayer": [12, 14], "cvffnn": [12, 14], "cvrbfnn": [12, 14], "costfunc": [12, 17], "decayfunc": [12, 17], "regfunc": [12, 17], "l2_regular": [12, 13, 17], "gpu": [12, 17], "lambda": 13, "object": [15, 16], "dure": 15, "varieti": 15, "abstract": 16, "wrap": 16, "superclass": 16}, "objects": {"": [[0, 0, 0, "-", "actFunc"], [1, 0, 0, "-", "batchGenFunc"], [2, 0, 0, "-", "costFunc"], [3, 0, 0, "-", "cvffnn"], [4, 0, 0, "-", "cvrbfnn"], [5, 0, 0, "-", "decayFunc"], [6, 0, 0, "-", "deepptrbfnn"], [8, 0, 0, "-", "fcrbfnn"], [9, 0, 0, "-", "gpu"], [11, 0, 0, "-", "initFunc"], [13, 0, 0, "-", "regFunc"], [15, 0, 0, "-", "rplayer"], [16, 0, 0, "-", "rpnn"], [18, 0, 0, "-", "scffnn"]], "actFunc": [[0, 1, 1, "", "acos"], [0, 1, 1, "", "asin"], [0, 1, 1, "", "asinh"], [0, 1, 1, "", "atan"], [0, 1, 1, "", "atanh"], [0, 1, 1, "", "linear"], [0, 1, 1, "", "sech"], [0, 1, 1, "", "sin"], [0, 1, 1, "", "sinh"], [0, 1, 1, "", "splitComplex"], [0, 1, 1, "", "tan"], [0, 1, 1, "", "tanh"]], "batchGenFunc": [[1, 1, 1, "", "batch_sequential"], [1, 1, 1, "", "batch_shuffle"]], "costFunc": [[2, 1, 1, "", "mse"]], "cvffnn": [[3, 2, 1, "", "CVFFNN"]], "cvffnn.CVFFNN": [[3, 3, 1, "", "addLayer"], [3, 3, 1, "", "backprop"], [3, 3, 1, "", "feedforward"], [3, 3, 1, "", "fit"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "predict"]], "cvrbfnn": [[4, 2, 1, "", "CVRBFNN"]], "cvrbfnn.CVRBFNN": [[4, 3, 1, "", "addLayer"], [4, 3, 1, "", "backprop"], [4, 3, 1, "", "feedforward"], [4, 3, 1, "", "fit"], [4, 3, 1, "", "getHistory"], [4, 3, 1, "", "predict"]], "decayFunc": [[5, 1, 1, "", "exponential_decay"], [5, 1, 1, "", "none_decay"], [5, 1, 1, "", "staircase"], [5, 1, 1, "", "time_based_decay"]], "deepptrbfnn": [[6, 2, 1, "", "DeepPTRBFNN"]], "deepptrbfnn.DeepPTRBFNN": [[6, 3, 1, "", "addLayer"], [6, 3, 1, "", "backprop"], [6, 3, 1, "", "feedforward"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "getHistory"], [6, 3, 1, "", "predict"]], "fcrbfnn": [[8, 2, 1, "", "FCRBFNN"]], "fcrbfnn.FCRBFNN": [[8, 3, 1, "", "addLayer"], [8, 3, 1, "", "backprop"], [8, 3, 1, "", "feedforward"], [8, 3, 1, "", "fit"], [8, 3, 1, "", "getHistory"], [8, 3, 1, "", "predict"]], "gpu": [[9, 1, 1, "", "get_modules"]], "initFunc": [[11, 1, 1, "", "glorot_normal"], [11, 1, 1, "", "glorot_uniform"], [11, 1, 1, "", "ones"], [11, 1, 1, "", "ones_real"], [11, 1, 1, "", "random_normal"], [11, 1, 1, "", "random_uniform"], [11, 1, 1, "", "rbf_default"], [11, 1, 1, "", "zeros"]], "regFunc": [[13, 1, 1, "", "l2_regularization"]], "rplayer": [[15, 2, 1, "", "Layer"]], "rpnn": [[16, 2, 1, "", "NeuralNetwork"]], "rpnn.NeuralNetwork": [[16, 3, 1, "", "addLayer"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "getHistory"], [16, 3, 1, "", "predict"]], "scffnn": [[18, 2, 1, "", "SCFFNN"]], "scffnn.SCFFNN": [[18, 3, 1, "", "addLayer"], [18, 3, 1, "", "backprop"], [18, 3, 1, "", "feedforward"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "getHistory"], [18, 3, 1, "", "predict"]]}, "objtypes": {"0": "py:modules", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "modules", "Python modules"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"actfunc": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 18], "batchgenfunc": 1, "costfunc": 2, "cvffnn": 3, "cvrbfnn": 4, "decayfunc": 5, "deepptrbfnn": 6, "code": 7, "exampl": 7, "fcrbfnn": 8, "gpu": 9, "welcom": [10, 19], "rosenpi": [10, 12, 19], "": [10, 19], "document": [10, 19], "what": [10, 19], "i": [10, 19], "depend": [10, 19], "featur": [10, 19], "benefit": [10, 19], "content": 10, "indic": 10, "tabl": 10, "initfunc": 11, "packag": [12, 14, 17], "regfunc": 13, "rosenpymodul": 14, "rplayer": 15, "rpnn": 16, "rputil": 17, "scffnn": 18}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"actFunc modules": [[0, "modules-actFunc"]], "batchGenFunc modules": [[1, "modules-batchGenFunc"]], "costFunc modules": [[2, "modules-costFunc"]], "cvffnn modules": [[3, "modules-cvffnn"]], "cvrbfnn modules": [[4, "modules-cvrbfnn"]], "decayFunc modules": [[5, "modules-decayFunc"]], "deepptrbfnn modules": [[6, "modules-deepptrbfnn"]], "Code Example": [[7, "code-example"]], "fcrbfnn modules": [[8, "modules-fcrbfnn"]], "gpu modules": [[9, "modules-gpu"]], "Welcome to RosenPy\u2019s documentation!": [[10, "welcome-to-rosenpy-s-documentation"], [19, "welcome-to-rosenpy-s-documentation"]], "What is RosenPy?": [[10, "what-is-rosenpy"], [19, "what-is-rosenpy"]], "Dependencies": [[10, "dependencies"], [19, "dependencies"]], "Features and Benefits": [[10, "features-and-benefits"], [19, "features-and-benefits"]], "Contents:": [[10, null]], "Indices and tables": [[10, "indices-and-tables"]], "initFunc modules": [[11, "modules-initFunc"]], "RosenPy Package": [[12, "rosenpy-package"]], "regFunc modules": [[13, "modules-regFunc"]], "RosenPymodules Package": [[14, "rosenpymodules-package"]], "rplayer modules": [[15, "modules-rplayer"]], "rpnn modules": [[16, "modules-rpnn"]], "RpUtils Package": [[17, "rputils-package"]], "scffnn modules": [[18, "modules-scffnn"]]}, "indexentries": {"acos() (in modules actfunc)": [[0, "actFunc.acos"]], "actfunc": [[0, "modules-actFunc"]], "asin() (in modules actfunc)": [[0, "actFunc.asin"]], "asinh() (in modules actfunc)": [[0, "actFunc.asinh"]], "atan() (in modules actfunc)": [[0, "actFunc.atan"]], "atanh() (in modules actfunc)": [[0, "actFunc.atanh"]], "linear() (in modules actfunc)": [[0, "actFunc.linear"]], "modules": [[0, "modules-actFunc"], [1, "modules-batchGenFunc"], [2, "modules-costFunc"], [3, "modules-cvffnn"], [4, "modules-cvrbfnn"], [5, "modules-decayFunc"], [6, "modules-deepptrbfnn"], [8, "modules-fcrbfnn"], [9, "modules-gpu"], [11, "modules-initFunc"], [13, "modules-regFunc"], [15, "modules-rplayer"], [16, "modules-rpnn"], [18, "modules-scffnn"]], "sech() (in modules actfunc)": [[0, "actFunc.sech"]], "sin() (in modules actfunc)": [[0, "actFunc.sin"]], "sinh() (in modules actfunc)": [[0, "actFunc.sinh"]], "splitcomplex() (in modules actfunc)": [[0, "actFunc.splitComplex"]], "tan() (in modules actfunc)": [[0, "actFunc.tan"]], "tanh() (in modules actfunc)": [[0, "actFunc.tanh"]], "batchgenfunc": [[1, "modules-batchGenFunc"]], "batch_sequential() (in modules batchgenfunc)": [[1, "batchGenFunc.batch_sequential"]], "batch_shuffle() (in modules batchgenfunc)": [[1, "batchGenFunc.batch_shuffle"]], "costfunc": [[2, "modules-costFunc"]], "mse() (in modules costfunc)": [[2, "costFunc.mse"]], "cvffnn (class in cvffnn)": [[3, "cvffnn.CVFFNN"]], "addlayer() (cvffnn.cvffnn method)": [[3, "cvffnn.CVFFNN.addLayer"]], "backprop() (cvffnn.cvffnn method)": [[3, "cvffnn.CVFFNN.backprop"]], "cvffnn": [[3, "modules-cvffnn"]], "feedforward() (cvffnn.cvffnn method)": [[3, "cvffnn.CVFFNN.feedforward"]], "fit() (cvffnn.cvffnn method)": [[3, "cvffnn.CVFFNN.fit"]], "gethistory() (cvffnn.cvffnn method)": [[3, "cvffnn.CVFFNN.getHistory"]], "predict() (cvffnn.cvffnn method)": [[3, "cvffnn.CVFFNN.predict"]], "cvrbfnn (class in cvrbfnn)": [[4, "cvrbfnn.CVRBFNN"]], "addlayer() (cvrbfnn.cvrbfnn method)": [[4, "cvrbfnn.CVRBFNN.addLayer"]], "backprop() (cvrbfnn.cvrbfnn method)": [[4, "cvrbfnn.CVRBFNN.backprop"]], "cvrbfnn": [[4, "modules-cvrbfnn"]], "feedforward() (cvrbfnn.cvrbfnn method)": [[4, "cvrbfnn.CVRBFNN.feedforward"]], "fit() (cvrbfnn.cvrbfnn method)": [[4, "cvrbfnn.CVRBFNN.fit"]], "gethistory() (cvrbfnn.cvrbfnn method)": [[4, "cvrbfnn.CVRBFNN.getHistory"]], "predict() (cvrbfnn.cvrbfnn method)": [[4, "cvrbfnn.CVRBFNN.predict"]], "decayfunc": [[5, "modules-decayFunc"]], "exponential_decay() (in modules decayfunc)": [[5, "decayFunc.exponential_decay"]], "none_decay() (in modules decayfunc)": [[5, "decayFunc.none_decay"]], "staircase() (in modules decayfunc)": [[5, "decayFunc.staircase"]], "time_based_decay() (in modules decayfunc)": [[5, "decayFunc.time_based_decay"]], "deepptrbfnn (class in deepptrbfnn)": [[6, "deepptrbfnn.DeepPTRBFNN"]], "addlayer() (deepptrbfnn.deepptrbfnn method)": [[6, "deepptrbfnn.DeepPTRBFNN.addLayer"]], "backprop() (deepptrbfnn.deepptrbfnn method)": [[6, "deepptrbfnn.DeepPTRBFNN.backprop"]], "deepptrbfnn": [[6, "modules-deepptrbfnn"]], "feedforward() (deepptrbfnn.deepptrbfnn method)": [[6, "deepptrbfnn.DeepPTRBFNN.feedforward"]], "fit() (deepptrbfnn.deepptrbfnn method)": [[6, "deepptrbfnn.DeepPTRBFNN.fit"]], "gethistory() (deepptrbfnn.deepptrbfnn method)": [[6, "deepptrbfnn.DeepPTRBFNN.getHistory"]], "predict() (deepptrbfnn.deepptrbfnn method)": [[6, "deepptrbfnn.DeepPTRBFNN.predict"]], "fcrbfnn (class in fcrbfnn)": [[8, "fcrbfnn.FCRBFNN"]], "addlayer() (fcrbfnn.fcrbfnn method)": [[8, "fcrbfnn.FCRBFNN.addLayer"]], "backprop() (fcrbfnn.fcrbfnn method)": [[8, "fcrbfnn.FCRBFNN.backprop"]], "fcrbfnn": [[8, "modules-fcrbfnn"]], "feedforward() (fcrbfnn.fcrbfnn method)": [[8, "fcrbfnn.FCRBFNN.feedforward"]], "fit() (fcrbfnn.fcrbfnn method)": [[8, "fcrbfnn.FCRBFNN.fit"]], "gethistory() (fcrbfnn.fcrbfnn method)": [[8, "fcrbfnn.FCRBFNN.getHistory"]], "predict() (fcrbfnn.fcrbfnn method)": [[8, "fcrbfnn.FCRBFNN.predict"]], "get_modules() (in modules gpu)": [[9, "gpu.get_modules"]], "gpu": [[9, "modules-gpu"]], "glorot_normal() (in modules initfunc)": [[11, "initFunc.glorot_normal"]], "glorot_uniform() (in modules initfunc)": [[11, "initFunc.glorot_uniform"]], "initfunc": [[11, "modules-initFunc"]], "ones() (in modules initfunc)": [[11, "initFunc.ones"]], "ones_real() (in modules initfunc)": [[11, "initFunc.ones_real"]], "random_normal() (in modules initfunc)": [[11, "initFunc.random_normal"]], "random_uniform() (in modules initfunc)": [[11, "initFunc.random_uniform"]], "rbf_default() (in modules initfunc)": [[11, "initFunc.rbf_default"]], "zeros() (in modules initfunc)": [[11, "initFunc.zeros"]], "l2_regularization() (in modules regfunc)": [[13, "regFunc.l2_regularization"]], "regfunc": [[13, "modules-regFunc"]], "layer (class in rplayer)": [[15, "rplayer.Layer"]], "rplayer": [[15, "modules-rplayer"]], "neuralnetwork (class in rpnn)": [[16, "rpnn.NeuralNetwork"]], "addlayer() (rpnn.neuralnetwork method)": [[16, "rpnn.NeuralNetwork.addLayer"]], "fit() (rpnn.neuralnetwork method)": [[16, "rpnn.NeuralNetwork.fit"]], "gethistory() (rpnn.neuralnetwork method)": [[16, "rpnn.NeuralNetwork.getHistory"]], "predict() (rpnn.neuralnetwork method)": [[16, "rpnn.NeuralNetwork.predict"]], "rpnn": [[16, "modules-rpnn"]], "scffnn (class in scffnn)": [[18, "scffnn.SCFFNN"]], "addlayer() (scffnn.scffnn method)": [[18, "scffnn.SCFFNN.addLayer"]], "backprop() (scffnn.scffnn method)": [[18, "scffnn.SCFFNN.backprop"]], "feedforward() (scffnn.scffnn method)": [[18, "scffnn.SCFFNN.feedforward"]], "fit() (scffnn.scffnn method)": [[18, "scffnn.SCFFNN.fit"]], "gethistory() (scffnn.scffnn method)": [[18, "scffnn.SCFFNN.getHistory"]], "predict() (scffnn.scffnn method)": [[18, "scffnn.SCFFNN.predict"]], "scffnn": [[18, "modules-scffnn"]]}})
